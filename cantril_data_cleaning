#!/bin/bash
#Author: Zihao Wang,24284623
#input: three:homicide-rate-unodc.tsv,life-satisfaction-vs-life-expectancy.tsv, gdp-vs-happiness.tsv,any order
#output:tab-separated data directed,to standard output.

#check if the number of the arguments is correct
if [[ "$#" -ne 3 ]]
then
    echo "Usage: $0 <homicide-rate-unodc.tsv> <life-satisfaction-vs-life-expectancy.tsv> <gdp-vs-happiness.tsv>,any order" >/dev/stderr
    exit 1
fi

#check if can't find the file or has zero length
for file in "$1" "$2" "$3"
do
	if [[ ! -s "$file" ]]
	then
		echo "The named input file $1 or $2 or $3 does not exist or has zero length" >/dev/stderr
		exit 1
	fi
done


#check if files are tab-separated foramt
check_tab_separated() {
    header=$(head -n 1 "$1")
    if [[ ! "$header" == *$'\t'* ]]
    then
        echo "$1 is not a tab-separated foramt file,check it" >/dev/stderr
        exit 1
    fi
}

#remove the column with header Continent
remove_continent_column() {
    local input_file="$1"
    local conti_column="Continent"

    # 获取目标列的索引
    local conti_col=$(awk -F'\t' -v target="$conti_column" 'NR==1 { for (i=1; i<=NF; i++) { if ($i == target) print i } }' "$input_file")

    # 使用 AWK 删除目标列
    if [[ -n "$conti_col" ]]
    then
        awk -F'\t' -v conti_col="$conti_col" 'BEGIN { OFS=FS } { $conti_col=""; sub(/\t$/, "") } 1' "$input_file"
    else
    	cat "$input_file"
    fi
}

filter_data() {
    awk -F'\t' 'NR==1 {
        for (i=1; i<=NF; i++) {
            if ($i == "Code") code_col=i
            if ($i == "Year") year_col=i
        }
        print
    }
    NR>1 {
        if ($code_col != "" && $year_col >= 2011 && $year_col <= 2021) {
            print
        }
    }' "$1"
}

#count how many numbers in each line
check_cell_count() {
    local file=$1
    local header_count=$(awk -F'\t' 'NR==1 {print NF}' "$file")

    awk -F'\t' -v header_count="$header_count" 'NR>1 && NF != header_count {
        print "Line " NR " in file " FILENAME " does not have the correct number of cells." > "/dev/stderr"
    }' "$file"
}


process_file() {
    local input_file=$1
    local output_file=$2
    local temp_file=$(mktemp)

    check_tab_separated "$input_file"
    remove_continent_column "$input_file" > "$output_file"
    filter_data "$output_file" > "$temp_file"
    #check_cell_count "$temp_file"
    mv "$temp_file" "$output_file" 
}

#we don't know the order of three inputs,so we need use their name to name the cleaned data
filename1=$(basename "$1" .tsv)
filename2=$(basename "$2" .tsv)
filename3=$(basename "$3" .tsv)
process_file "$1" "${filename1}_clean.tsv"
process_file "$2" "${filename2}_clean.tsv"
process_file "$3" "${filename3}_clean.tsv"


{ head -n 1 gdp-vs-happiness_clean.tsv; tail -n +2 gdp-vs-happiness_clean.tsv | sort -k1,1 -k2,2 -k3,3; } > sorted_gdp.tsv
{ head -n 1 homicide-rate-unodc_clean.tsv; tail -n +2 homicide-rate-unodc_clean.tsv  | sort -k1,1 -k2,2 -k3,3; } > sorted_homicide.tsv
{ head -n 1 life-satisfaction-vs-life-expectancy_clean.tsv; tail -n +2 life-satisfaction-vs-life-expectancy_clean.tsv  | sort -k1,1 -k2,2 -k3,3; } > sorted_life_expectancy.tsv
#tail -n +2 gdp-vs-happiness_clean.tsv |sort -k1,1 -k2,2 -k3,3 gdp-vs-happiness_clean.tsv > sorted_gdp.tsv
#tail -n +2 homicide-rate-unodc_clean.tsv |sort -k1,1 -k2,2 -k3,3 homicide-rate-unodc_clean.tsv > sorted_homicide.tsv
#tail -n +2 life-satisfaction-vs-life-expectancy_clean.tsv |sort -k1,1 -k2,2 -k3,3 life-satisfaction-vs-life-expectancy_clean.tsv > sorted_life_expectancy.tsv

#order:<Entity/Country> <Code> <Year> <GDP per capita> <Population> <Homicide Rate> <Life Expectancy> <Cantril Ladder score>
#join -t $'\t' -1 7 -2 5 -o '1.1,1.2,1.3,1.5,1.6,2.4,1.4' sorted_gdp.tsv sorted_homicide.tsv >combined_file.tsv
#join -t $'\t' -1 1,2,3 -2 1,2,3 -o '1.1,1.2,1.3,1.5,1.6,2.4,1.4'<(sort gdp-vs-happiness_clean.tsv)<(sort homicide-rate-unodc_clean.tsv) >combined_file.tsv
#join -t $'\t' -1 1,2,3 -2 1,2,3 -o '1.1,1.2,1.3,1.5,1.6,2.4,1.4' sorted_gdp.tsv sorted_homicide.tsv > combined_file.tsv
#awk 'BEGIN {FS = OFS = "\t"} NR == FNR {data1[$1,$2,$3] = $4 FS $5 FS $6; next} {print $1, $2, $3, data1[$1,$2,$3], $4}' sorted_gdp.tsv sorted_homicide.tsv > combined_file.tsv
awk 'BEGIN {FS = OFS = "\t"} NR == FNR {data1[$1,$2,$3] = $4 FS $5 FS $6; next} {print $1, $2, $3, data1[$1,$2,$3], $4}' sorted_gdp.tsv sorted_homicide.tsv > intermediate_result.tsv

awk 'BEGIN {FS = OFS = "\t"} 
     NR == FNR {data2[$1,$2,$3] = $4; next} 
     {print $0, (data2[$1,$2,$3] ? data2[$1,$2,$3] : "NULL")}' intermediate_result.tsv sorted_life_expectancy.tsv > combined_file.tsv

#sorted_life_expectancy.tsv
rm gdp-vs-happiness_clean.tsv homicide-rate-unodc_clean.tsv life-satisfaction-vs-life-expectancy_clean.tsv